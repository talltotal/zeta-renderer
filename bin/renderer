#!/usr/bin/env node

require("../lib/polyfill");

var _ = require("lodash");
var fs = require("fs");
var express = require("express");

// 初始化配置
var env = require("../lib/enviroments");
// 初始化渲染环境
var render = require("../lib/handlebars/render");
var dataProvider = require("../lib/data_provider");
var FileNotFoundError = require("../lib/errors");


app = express();

// GET请求,路径中没有.的情况: 渲染页面
app.get(/^([^\.]+)$/, function(req, res, next) {
  var path = req.params[0];
  var urlData = dataProvider.getUrlData(path, req.query);
  var globalData = dataProvider.getGlobalData();
  var context = _.isPlainObject(urlData.result) ? _.assign(req.query, urlData.result) : req.query;
  context = _.assign(globalData, context);
  try {
    var result = render.renderFile(path, context);
    res.send(result);
  } catch (_error) {
    var err = _error;
    if (err instanceof FileNotFoundError) {
      next();
    } else {
      throw err;
    }
  }
});

// GET请求,路径中有.的情况: 发送文件
app.get(/^(.+)$/, function(req, res, next) {
  var path = req.params[0];
  if (env.assetsPrefix !== void 0 && path.startsWith(env.assetsPrefix)) {
    path = path.substring(env.assetsPrefix.length);
  }
  var realPath = "" + env.filesHome + path;
  if (fs.existsSync(realPath)) {
    res.sendFile(realPath);
  } else {
    next();
  }
});

// 所有请求类型,路径中有.的情况
app.all(/^(.+)$/, function(req, res) {
  var path = req.params[0];
  var dataResult = dataProvider.getUrlData(path, req.method, req.query);
  if (dataResult.found) {
    res.send(dataResult.result);
  } else {
    console.log("[Not Found] " + path);
    res.status(404);
    res.send();
  }
});

app.listen(env.serverPort);

console.log("server listening at port: " + env.serverPort);
